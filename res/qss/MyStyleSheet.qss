MainWindow, QDialog
{ 
 background-color: #404B57; 
 color: #E6E6E6; 
}

QTextBrowser 
{ 
 background-color: #3A444F; 
 color: #E6E6E6; 
}

/* ##### Toolbars, ... ##### */
QToolBar {
    background: #404B57;
    color: white;
}

QLabel {
    color: white;
    padding: 3px;
}

QMenuBar {
    background: #404B57;
    color: white;
}

QMenuBar::item {
    background: #404B57;
    color: white;
}

QWidget {
    background: #404B57;
}

/* QTabWidget {
  background-color: #414D59;
}*/

QTabWidget::pane {
    border: 1px;
}

QTabWidget::tab-bar {
    left: 5px; /* move to the right by 5px */
}

QTabBar::tab {
    background: #404B57;
    border: 0px;
    padding: 5px;
    color: #FFFFFF;
}

QTabBar::tab:selected, QTabBar::tab:hover {
    background: #55616f;
}

QHeaderView {
  background: #414D59;
}

/*QHeaderView::section {
    background: #55616f;
    color: white;
    border: 1px;
    padding: 3px;
}*/

QGroupBox, QCheckBox {
    color: #E6E6E6; 
}


/* ##### Scrollbars ##### */

QScrollBar:vertical, QScrollBar:horizontal {

  border: 1px solid #13161a;
  background-color: #252b33;
  width: 17px;
  margin: 21px 0 21px 0;
}

QScrollBar::handle:vertical, QScrollBar::handle:horizontal {
  background-color: #5f6d80;
  min-height: 25px;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical, QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
  border: 1px solid #13161a;
  background-color: #3A444F;
  height: 20px;
}

QScrollBar::add-line:vertical, QScrollBar::add-line:horizontal {
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical, QScrollBar::sub-line:horizontal {
    subcontrol-position: top;
    subcontrol-origin: margin;
}


QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical, QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    background: #949fac;
}

/* ##### Toolbar buttons ##### */
QToolButton
{
    color: white;
    background: transparent;
}

QComboBox {
  background: #778390;
  border: none;
  selection-background-color: #778390;
  selection-color: #FFFFFF;
  color: #FFFFFF;
}

QComboBox QAbstractItemView {
  background: #778390;
  color: #FFFFFF;
  border: none;
  selection-color: #FFFFFF;
  selection-background-color: #314b67;
}

QComboBox:on {
  selection-background-color: #314b67;
  background: #536272;
}

/* ##########Slider########## */

QSlider::vertical {
  width: 40px;
}

QSlider::groove:vertical {
  background: #5B6671;
  width: 5px;
  border: 1px solid #1B2224;
  position: absolute;
  left: 8px; right: 8px;
}

QSlider::handle:vertical {
  background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #6c6c6c, stop:0.45 #4c4c4c, stop:0.50 #ffff00, stop:0.55 #313131, stop:1 #333333);
  border: 1px solid #5c5c5c;
  /*border-radius: 4px;*/
  margin: 0 -40px;
  height: 20px;
  width 40px;
}

QSlider::handle:vertical:hover {
  background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #6c6c6c, stop:0.45 #4c4c4c, stop:0.50 #ffff00, stop:0.55 #313131, stop:1 #333333);
  border: 1px solid #000000;
}

QPushButton {
  background: #414D59;
  color: white;
}

/*QPushButton#B64 {
  background: white;
  border-radius: 40px;
}*/

QLineEdit {
  background: #414D59;
  color: white;
}

QSpinBox {
  background: #414D59;
  color: white;
}

QCheckBox {
  background: #414D59;
  color: white;
}

QDoubleSpinBox {
  background: #414D59;
  color: white;
}

QTreeView  {
  background: #414D59;
}

TabSeq {
  background: #414D59;
}

TabMMState {
  background: #414D59;
}

QTreeView QTreeCornerButton::section {
  background-color: #414D59;
}

/* QTreeView
Supports the box model. When alternating row colors is enabled, the alternating colors can be styled using the alternate-background-color property.
The color and background of the selected item is styled using selection-color and selection-background-color respectively.
The selection behavior is controlled by the show-decoration-selected property.
The branches of the tree view can be styled using the ::branch subcontrol. The ::branch Sub-control supports the :open, :closed, :has-sibling and :has-children pseudo states.
Use the ::item subcontrol for more fine grained control over the items in the QTreeView.
See QAbsractScrollArea to style scrollable backgrounds.*/

/*QTreeView::item {
     border: 1px solid #2B3947;
}*/

QProgressBar {
  text-align: left;
  background-color: #778390;
}

QProgressBar::chunk {
    background-color: #960710;
    width: 20px;
}

QToolTip {
  background: #778390
}
